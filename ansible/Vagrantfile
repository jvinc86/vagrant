# -*- mode: ruby -*-
# vi: set ft=ruby :

ENV['VAGRANT_NO_PARALLEL'] = 'yes'

Vagrant.configure(2) do |config|

# --------------- Configuraciones de llaves SSH ---------------------- 
  mi_llave_privada = "~/.ssh/id_ed25519"
  mi_llave_publica = "~/.ssh/id_ed25519.pub"
  llave_de_vagrant = "~/.vagrant.d/insecure_private_key"
  ruta_servidor_authorized_keys = "/home/vagrant/.ssh/authorized_keys"

  config.ssh.insert_key = false  # Deshabilita la insercion automatica de una key por parte de Vagrant
  config.ssh.private_key_path = [ mi_llave_privada , llave_de_vagrant ] # Llave privada: Configuramos 2 llaves posibles para usar como conexion, la de vcamacho y la de vagrant 

#------------------ Variables a ingresar  --------------------------------- 

  os_ubuntu_box = "generic/ubuntu2004"
  os_rocky_box = "generic/rocky8"
  CantServUbuntu = 2
  CantServRocky = 1
# --------------- Configuraciones Generales  ---------------------------

  config.vm.provision "shell", path: "01-crear_dns_local.sh"
  # config.vm.provision "shell", path: "ALGUN SCRIPT"

  config.vm.provision "file", source: mi_llave_publica, destination: ruta_servidor_authorized_keys
  config.vm.synced_folder '.', '/vagrant', disabled: true
  config.vm.box_check_update = true
  config.vm.boot_timeout = 600

#----------------------- Servidores (UBUNTU) -----------------------------

  (1..CantServUbuntu).each do |i|
    
    config.vm.define "srvubuntu#{i}" do |node|
        servidor_ip = "192.168.56.7#{i}"
        servidor_nombre_os =  "srvubuntu#{i}"
        vm_nombre_virtual_box = "srvubuntu#{i}"

        node.vm.hostname = servidor_nombre_os
        node.vm.box = os_ubuntu_box
        
        node.vm.network "private_network", ip: servidor_ip

        node.vm.provider :virtualbox do |v|
            v.name    = vm_nombre_virtual_box
            v.memory  = 1024
            v.cpus    = 1
            # v.gui = true
            # v.check_guest_additions = false
        end

        node.vm.provider :libvirt do |v|
            v.memory  = 1024
            v.nested  = true
            v.cpus    = 1
        end
      
        node.vm.provision "shell", path: "02-permitir_ssh_ubuntu.sh"
        node.vm.post_up_message = "EXITO!!! La VM #{servidor_nombre_os} esta lista. Ingresa via SSH con vagrant@#{servidor_ip}"
    end

  end

#----------------------- Servidores (ROCKY) -----------------------------

(1..CantServRocky).each do |i|
    
  config.vm.define "srvrocky#{i}" do |node|
      servidor_ip = "192.168.56.6#{i}"
      servidor_nombre_os =  "srvrocky#{i}"
      vm_nombre_virtual_box = "srvrocky#{i}"

      node.vm.hostname = servidor_nombre_os
      node.vm.box = os_rocky_box
      
      node.vm.network "private_network", ip: servidor_ip

      node.vm.provider :virtualbox do |v|
          v.name    = vm_nombre_virtual_box
          v.memory  = 1024
          v.cpus    = 1
          # v.gui = true
          # v.check_guest_additions = false
      end

      node.vm.provider :libvirt do |v|
          v.memory  = 1024
          v.nested  = true
          v.cpus    = 1
      end
    
      node.vm.provision "shell", path: "03-permitir_ssh_rocky.sh"
      node.vm.post_up_message = "EXITO!!! La VM #{servidor_nombre_os} esta lista. Ingresa via SSH con vagrant@#{servidor_ip}"
  end

end


#----------------------- Ansible MASTER ----------------------------- 
config.vm.define "ansiblemaster" do |ansiblemaster|
  servidor_ip           = "192.168.56.70"
  servidor_nombre_os    = "ansiblemaster"
  vm_nombre_virtual_box = "ansiblemaster"
  

  ansiblemaster.vm.hostname   = servidor_nombre_os
  ansiblemaster.vm.box = os_ubuntu_box

  ansiblemaster.vm.network "private_network", ip: servidor_ip

  ansiblemaster.vm.provider :virtualbox do |v|
      v.name    = vm_nombre_virtual_box
      v.memory  = 1024
      v.cpus    = 1
      # v.gui = true
      # v.check_guest_additions = false
  end

  ansiblemaster.vm.provider :libvirt do |v|
      v.memory  = 1024
      v.nested  = true
      v.cpus    = 1
  end

  ansiblemaster.vm.provision "shell", path: "04-instalar_ansible.sh"
  ansiblemaster.vm.post_up_message = "EXITO!!! La VM #{servidor_nombre_os} esta lista. Ingresa via SSH con vagrant@#{servidor_ip}"
end

#----------------------------------------------------------------------------------------------

end
